{
	"info": {
		"_postman_id": "0781ab22-0c3f-4837-83c6-3d8d9727ff23",
		"name": "Variables",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26186702"
	},
	"item": [
		{
			"name": "get",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Llamar al endpoint de login/token antes de este request\r",
							"pm.sendRequest({\r",
							"    url: 'http://localhost:5159/api/Acceso/TokenJWT',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            Correo: \"tomas@gmail.com\",   // üëà credenciales reales\r",
							"            Clave: \"QVNERkdISktMUE9JVVlZVFQxMjM0NQ==\"          // üëà credenciales reales\r",
							"        })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    if (err) {\r",
							"        \r",
							"        console.log(\"‚ùå Error obteniendo token:\", err,res);\r",
							"    } else {\r",
							"        let jsonData = res.json();\r",
							"        if (jsonData.isSuccess && jsonData.token) {\r",
							"            pm.environment.set(\"token\", jsonData.token);\r",
							"            console.log(\"‚úÖ Token actualizado:\", jsonData.token);\r",
							"        } else {\r",
							"            console.log(\"‚ö†Ô∏è No se pudo obtener token\");\r",
							"        }\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parsear respuesta JSON\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// Validar que el status sea 200\r",
							"pm.test(\"Status code es 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Validar que la respuesta sea un array\r",
							"pm.test(\"Respuesta es un array\", function () {\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.length).to.be.above(0); // debe tener elementos\r",
							"});\r",
							"\r",
							"// Validar campos de cada objeto\r",
							"jsonData.forEach((item, index) => {\r",
							"    pm.test(`Validar objeto ${index + 1} tiene todos los campos`, function () {\r",
							"        pm.expect(item).to.have.property(\"id\");\r",
							"        pm.expect(item).to.have.property(\"rut\");\r",
							"        pm.expect(item).to.have.property(\"nombre\");\r",
							"        pm.expect(item).to.have.property(\"sexo\");\r",
							"        pm.expect(item).to.have.property(\"edad\");\r",
							"    });\r",
							"\r",
							"    // Validaciones de valores espec√≠ficos (opcional)\r",
							"    if (item.id === 1) {\r",
							"        pm.test(\"Validar datos del objeto con id 1\", function () {\r",
							"            pm.expect(item.rut).to.eql(\"12.345.678-9\");\r",
							"            pm.expect(item.nombre).to.eql(\"Juan P√©rez\");\r",
							"            pm.expect(item.sexo).to.eql(\"M\");\r",
							"            pm.expect(item.edad).to.eql(30);\r",
							"        });\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "text/plain"
					}
				],
				"url": {
					"raw": "https://localhost:44384/api/Personas",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44384",
					"path": [
						"api",
						"Personas"
					],
					"query": [
						{
							"key": "$filter",
							"value": "id eq 3",
							"disabled": true
						},
						{
							"key": "$filter",
							"value": "rut eq '11.223.344-5'",
							"disabled": true
						},
						{
							"key": "$filter",
							"value": "nombre eq 'Carlos Ram√≠rez'",
							"disabled": true
						},
						{
							"key": "$filter",
							"value": "sexo eq 'M'",
							"disabled": true
						},
						{
							"key": "$filter",
							"value": "edad eq 30",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}